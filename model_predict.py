# -*- coding: utf-8 -*-
"""model_predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GqrUWGIr1Sld2HyTcx_Ege6XYx2ORZky
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model
from PIL import Image
import matplotlib.pyplot as plt
import os

model = load_model("Ingredient_detector.h5")

with open("class_names.txt", "r") as f:
    class_names = [line.strip() for line in f.readlines()]

def predict(image):
    try: 
        img = image.convert("RGB")
        img_resized = img.resize((150, 150))  # Resize to match training size
        img_array = np.array(img_resized) / 255.0  # Normalize
        img_array = np.expand_dims(img_array, axis=0)  # Add batch dimension

    # Predict
        predictions = model.predict(img_array)
        predicted_idx = np.argmax(predictions)
        predicted_class = class_names[predicted_idx]

        return [predicted_class]

    except Exception as e:
        print(f"Prediction error: {e}")
        return ["Prediction failed"]


    plt.imshow(img)
    plt.axis('off')
    plt.title(f"Prediction: {predicted_class} ({confidence*100:.2f}%)")
    plt.show()